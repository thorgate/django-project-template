# - {%- set BASE_HOSTNAME = cookiecutter.repo_name | as_hostname + "." + cookiecutter.test_host %}

# Hostnames for the site
# - {%- if cookiecutter.frontend_style == SPA or cookiecutter.frontend_style == SPA_NEXT %}
django_site_host: "{{ cookiecutter.spa_django_host_prefix | as_hostname }}.{{ BASE_HOSTNAME }}"
node_site_host: "{{ BASE_HOSTNAME }}"
# - {%- else %}
django_site_host: "{{ BASE_HOSTNAME }}"
# - {%- endif %}

# Email settings
django_default_from_email: ""
django_server_email: ""

# Sentry config
django_sentry_environment: "test"
django_sentry_dsn: ""  # TODO: Set to correct value or remove the TODO
# - {%- if cookiecutter.frontend_style == SPA or cookiecutter.frontend_style == SPA_NEXT %}
app_sentry_environment: "test"
app_sentry_dsn: ""  # TODO: Set to correct value or remove the TODO
# - {%- endif %}

# Django health-check access token
django_health_check_access_token: "TODO"

# - {% if cookiecutter.django_media_engine == GCS %}
django_gs_bucket_name: "{{ cookiecutter.repo_name }}-staging"
django_gs_project_id: "TODO"
# - {%- endif %}{% if cookiecutter.django_media_engine == S3 %}
# S3 bucket name to use
django_aws_storage_bucket_name: "{{ cookiecutter.repo_name }}-staging"
# - {%- endif %}

# Which compose file to use in the server
compose_file: "docker-compose.production.yml"

# Which docker compose command to use. Compose v2 uses `docker compose` instead of `docker-compose`
compose_command: "docker-compose"

# What git branch to deploy to the server
#  For temporary deployments see `Deploying a different version` section in the README in ansible directory.
deployment_version: "master"

# Reminder email for letsencrypt certificates
letsencrypt_reminder_email: "{{ cookiecutter.admin_email }}"

# Allow/Block indexing via `X-Robots-Tag` header
#
# Set to true in test servers
disable_indexing: true
