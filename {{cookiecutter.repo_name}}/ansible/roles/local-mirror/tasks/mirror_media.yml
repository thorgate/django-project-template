{%- raw -%}
- set_fact:
    media_backend: "FS"


- set_fact:
    media_backend: "S3"
  when: django_aws_access_key_id is defined


- name: "Media backend is {{ media_backend }}"
  shell: echo "Detected media backend is {{ media_backend }}"


- name: "Fail if media mirroring is not supported for backend"
  fail:
    msg: "Media backend {{ media_backend }} does not have logic for mirroring"
  when: "media_backend == 'GCS'"


- name: "Mirror S3 media files"
  import_tasks: mirror_media_S3.yml
  when: "media_backend == 'S3'"


- name: "Mirror FS media files"
  fail:
    msg: >
      Media backend {{ media_backend }} does not have logic for mirroring, but feel free to implement it.
      Use docker-compose cp on server to extract data from the volume into temporarily location, then copy it with
      ansible, and then do same as is done for S3 to put it back into docker volume.
  when: "media_backend == 'FS'"
{%- endraw %}
